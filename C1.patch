diff --git a/app/lib/progressBus.ts b/app/lib/progressBus.ts
--- a/app/lib/progressBus.ts
+++ b/app/lib/progressBus.ts
@@ -1,9 +1,12 @@
 type Payload = { meters: number; ts?: number };
 type Listener = (d: Payload) => void;
 let listeners: Listener[] = [];
+import { logEvent } from "../../src/dev/EventLog";
 
 export function publishMeters(meters: number) {
   if (Number.isFinite(meters)) {
     const d = { meters, ts: Date.now() };
+    try { logEvent("meter/change", { meters: meters|0 }); } catch {}
     listeners.forEach((fn) => fn(d));
   }
 }
diff --git a/app/play.tsx b/app/play.tsx
--- a/app/play.tsx
+++ b/app/play.tsx
@@ -1,9 +1,16 @@
 import React, { useEffect, useState } from 'react';
+import { logEvent } from "../src/dev/EventLog";
 
 export default function PlayScreen() {
   const [ready, setReady] = useState(false);
 
   useEffect(() => {
+    try { logEvent("stop/mount"); } catch {}
+    return () => {
+      try { logEvent("stop/unmount"); } catch {}
+    };
+  }, []);
+
     // eksisterende kode...
     setReady(true);
   }, []);
diff --git a/app/home.tsx b/app/home.tsx
--- a/app/home.tsx
+++ b/app/home.tsx
@@ -1,9 +1,13 @@
 import React, { useEffect, useState } from 'react';
+import { logEvent } from "../src/dev/EventLog";
 
 export default function HomeScreen() {
   const [init, setInit] = useState(false);
 
   useEffect(() => {
+    try { logEvent("phase-change", { to: "home" }); } catch {}
     // eksisterende kode...
     setInit(true);
   }, []);
