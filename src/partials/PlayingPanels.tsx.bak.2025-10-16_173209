import React, { useMemo, useState } from "react";
import { View, Text, Pressable } from "react-native";
import { BANKS } from "../banks/local";

type QA = { q: string; a: string; choices: string[] };

export default function PlayingPanels() {
  const [cat, setCat] = useState<keyof typeof BANKS>("general");
  const qs: QA[] = useMemo(() => (BANKS[cat] || []) as QA[], [cat]);

  const [i, setI] = useState(0);
  const [correct, setCorrect] = useState(0);

  const qa = qs[i];
  const total = qs.length;

  const pick = (label: string) => {
    if (!qa) return;
    const isOk = label === qa.a;
    if (isOk) setCorrect((c) => c + 1);
    const nxt = i + 1;
    if (nxt < total) setI(nxt);
  };

  if (!total) {
    return (
      <View style={{ padding: 16 }}>
        <Text style={{ color: "white", fontWeight: "800", fontSize: 18, marginBottom: 12 }}>
          Ingen spørsmål i {String(cat)}
        </Text>
        <View style={{ flexDirection: "row", gap: 8 }}>
          <Pressable onPress={() => { setCat("general"); setI(0); setCorrect(0); }}
            style={{ backgroundColor: "#e5e7eb", padding: 10, borderRadius: 10 }}>
            <Text>general</Text>
          </Pressable>
          <Pressable onPress={() => { setCat("kunst"); setI(0); setCorrect(0); }}
            style={{ backgroundColor: "#e5e7eb", padding: 10, borderRadius: 10 }}>
            <Text>kunst</Text>
          </Pressable>
        </View>
      </View>
    );
  }

  return (
    <View style={{ padding: 16, gap: 12 }}>
      <View style={{ flexDirection: "row", gap: 8 }}>
        <Pressable onPress={() => { setCat("general"); setI(0); setCorrect(0); }}
          style={{ backgroundColor: cat === "general" ? "#60a5fa" : "#e5e7eb", padding: 10, borderRadius: 10 }}>
          <Text style={{ color: cat === "general" ? "white" : "black", fontWeight: "700" }}>general</Text>
        </Pressable>
        <Pressable onPress={() => { setCat("kunst"); setI(0); setCorrect(0); }}
          style={{ backgroundColor: cat === "kunst" ? "#60a5fa" : "#e5e7eb", padding: 10, borderRadius: 10 }}>
          <Text style={{ color: cat === "kunst" ? "white" : "black", fontWeight: "700" }}>kunst</Text>
        </Pressable>
      </View>

      <Text style={{ color: "#9ca3af", fontWeight: "700" }}>
        {i + 1} / {total} — {String(cat)}
      </Text>

      <Text style={{ color: "white", fontSize: 18, fontWeight: "800" }}>{qa?.q}</Text>

      <View style={{ gap: 8 }}>
        {(qa?.choices || []).map((label, idx) => {
          const id = String(idx);
          return (
            <Pressable
              key={id}
              onPress={() => pick(label)}
              style={{ backgroundColor: "#e5e7eb", padding: 14, borderRadius: 12 }}
            >
              <Text>{label}</Text>
            </Pressable>
          );
        })}
      </View>

      <Text style={{ color: "#9ca3af", marginTop: 8 }}>Riktige: {correct}</Text>
    </View>
  );
}
