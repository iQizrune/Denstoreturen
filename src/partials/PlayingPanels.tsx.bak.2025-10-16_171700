import React, { useState } from "react";
import { View, Text, Pressable } from "react-native";
import { BANKS } from '../banks/local';
import { POINTS_PER_CORRECT } from "../config/game";

type Props = {
  onCorrect?: () => void;
  onWrong?: () => void;
  onFinished?: () => void;
  bankKey?: string;
};

export default function PlayingPanels({ onCorrect, onWrong, onFinished, bankKey = "general" }: Props) {
  const [idx, setIdx] = useState(0);
  const [answered, setAnswered] = useState<null | "correct" | "wrong">(null);

  
  const BANK = BANKS[bankKey] ?? BANKS.general;
  const done = idx >= BANK.length;
  const qa = BANK[idx];
  

  function handlePick(isCorrect: boolean) {
    if (answered || done) return;
    setAnswered(isCorrect ? "correct" : "wrong");
    if (isCorrect) onCorrect?.(); else onWrong?.();
  }

  function next() {
    if (!answered) return;
    setIdx((i) => {
      const n = i + 1;
      if (n >= BANK.length) { try { onFinished?.(); } catch {} }
      return n;
    });
    setAnswered(null);
  }

  if (done) {
    return (
      <View style={{ padding: 16, gap: 8 }}>
        <Text style={{ fontSize: 18, fontWeight: "700" }}>Ferdig med oppgaver üéâ</Text>
        <Text style={{ color: "#666" }}>Trykk ‚ÄúFullf√∏r spill ‚Üí‚Äù for √• se resultat.</Text>
      </View>
    );
  }

  const progress = (idx / BANK.length) * 100;

  return (
    <View style={{ padding: 16, gap: 12 }}>
      <Text style={{ fontSize: 18, fontWeight: "700" }}>
        Oppgave {idx + 1} av {BANK.length}
      </Text>
      <View style={{ height: 8, backgroundColor: "#e5e7eb", borderRadius: 999 }}>
        <View style={{ width: `${progress}%`, height: 8, backgroundColor: "#60a5fa", borderRadius: 999 }} />
      </View>

      <Text>{qa.q}</Text>

      {qa.options.map((opt) => (
        <Pressable
          key={opt.key}
          onPress={() => handlePick(opt.isCorrect)}
          disabled={!!answered}
          style={{
            backgroundColor:
              answered
                ? opt.isCorrect
                  ? "#16a34a"
                  : "#ef4444"
                : "#e5e7eb",
            padding: 12,
            borderRadius: 10,
          }}
        >
          <Text style={{ fontWeight: "600", color: answered ? "white" : "black" }}>
            {opt.key}) {opt.label}
          </Text>
        </Pressable>
      ))}

      {answered && (
        <>
          <Text>
            {answered === "correct" ? `Riktig! +${POINTS_PER_CORRECT} meter` : "Feil. 0 meter"}
          </Text>
          <Pressable
            onPress={next}
            style={{ marginTop: 8, backgroundColor: "#60a5fa", padding: 12, borderRadius: 8 }}
          >
            <Text style={{ color: "white", fontWeight: "700" }}>Neste</Text>
          </Pressable>
        </>
      )}
    </View>
  );
}
