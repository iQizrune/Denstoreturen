--- a/app/kart.tsx
+++ b/app/kart.tsx
@@ -2,12 +2,14 @@
 import { getOrderedStops } from "@/src/route/stopsFromData";
 import { useCurrentStopIndex } from "@/src/hooks/useCurrentStopIndex";
 import * as React from "react";
-import { SafeAreaView, View, Text, StyleSheet } from "react-native";
+import { SafeAreaView, View, Text, StyleSheet, Pressable } from "react-native";
 import MapViewHybrid from "@/components/map/MapViewHybrid";
 import type { RouteLeg } from "@/src/types/route";
 import { loadLegs } from "@/src/route/legsFromJson";
 import ArrivalPoster from "@/components/posters/ArrivalPoster";
 import StopModule from "../src/partials/StopModule";
 import { STOP_NAMES } from "@/src/data/stops";
 import { useArrivedStop } from "@/src/hooks/useArrivedStop";
+import { useRouter } from "expo-router";
 
 
 
@@ -19,10 +21,16 @@
 const [stopModuleVisible, setStopModuleVisible] = React.useState(false);
 
 
+  const router = useRouter();
   const currentStopIndex = useCurrentStopIndex(0);
 useArrivedStop(({ index }) => {
   // Fokuser kartet på ny etappe: etappen som starter ved dette stoppet
   setCurrentLeg(Math.min(index, LEGS.length - 1));
+
+  // Hvis kartet er åpent, skal vi ikke trigge ArrivalPoster (dette gjøres i Stop/Play)
+  // Men vi oppdaterer state hvis vi er her
+  if (setArrivalVisible) { // Sjekker om funksjonen er definert
+    setArrivalName(STOP_NAMES[index] || "");
+    setArrivalVisible(true);
+  }
   setArrivalName(STOP_NAMES[index] || "");
   setArrivalVisible(true);
 });
@@ -31,6 +39,12 @@
     <SafeAreaView style={styles.root}>
       <View style={styles.header}>
         <Text style={styles.title}>Kart (SVG)</Text>
+        <Pressable 
+          onPress={() => router.back()}
+          style={styles.closeButton}
+        >
+            <Text style={styles.closeButtonText}>Lukk</Text>
+        </Pressable>
         <Text style={styles.sub}>Etapper: {LEGS.length}</Text>
       </View>
       <View style={styles.body}>
@@ -57,11 +71,21 @@
 const styles = StyleSheet.create({
   root: { flex: 1, backgroundColor: "#fff" },
-  header: { paddingHorizontal: 16, paddingVertical: 10, borderBottomWidth: StyleSheet.hairlineWidth, borderBottomColor: "#ddd" },
+  header: { 
+    paddingHorizontal: 16, 
+    paddingVertical: 10, 
+    borderBottomWidth: StyleSheet.hairlineWidth, 
+    borderBottomColor: "#ddd",
+    flexDirection: 'row', // Legg til for å plassere knappen
+    alignItems: 'center',
+  },
   title: { fontSize: 18, fontWeight: "800" },
-  sub: { marginTop: 2, color: "#666" },
+  sub: { marginTop: 2, color: "#666", marginLeft: 'auto' }, // Endret sub for å gi plass til knappen
   body: { flex: 1 },
+  closeButton: {
+    paddingHorizontal: 12,
+    paddingVertical: 6,
+    borderRadius: 8,
+    backgroundColor: '#333', // Mørk knapp
+    marginLeft: 10,
+  },
+  closeButtonText: {
+    color: '#fff',
+    fontWeight: '700',
+  }
 });
