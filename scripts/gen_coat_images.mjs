import { readdirSync, writeFileSync } from 'fs';
import { join } from 'path';

const dir = 'assets/coats';
const files = readdirSync(dir).filter(f => f.toLowerCase().endsWith('.png')).sort((a,b)=>a.localeCompare(b));

const entries = files.map(f => {
  const key = f.replace(/\.png$/i,'').toLowerCase();
  const req = `require("@/assets/coats/${f}")`;
  return `  "${key}": ${req}`;
});

const out = `// AUTO-GENERATED by scripts/gen_coat_images.mjs
export const COAT_IMAGES: Record<string, any> = {
${entries.join(',\n')}
};

export type CoatKey = keyof typeof COAT_IMAGES;
`;

writeFileSync('src/data/coat_images.ts', out);
console.log(\`Wrote src/data/coat_images.ts with \${files.length} entries\`);
